/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace org.phybros.thrift
{

  /// <summary>
  /// Represents the armor that the player is wearing
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class PlayerArmor : TBase
  {
    private ItemStack _helmet;
    private ItemStack _chestplate;
    private ItemStack _leggings;
    private ItemStack _boots;

    /// <summary>
    /// The item in the player's helmet armor slot
    /// </summary>
    public ItemStack Helmet
    {
      get
      {
        return _helmet;
      }
      set
      {
        __isset.helmet = true;
        this._helmet = value;
      }
    }

    /// <summary>
    /// The item in the player's chestplate armor slot
    /// </summary>
    public ItemStack Chestplate
    {
      get
      {
        return _chestplate;
      }
      set
      {
        __isset.chestplate = true;
        this._chestplate = value;
      }
    }

    /// <summary>
    /// The item in the player's leggings armor slot
    /// </summary>
    public ItemStack Leggings
    {
      get
      {
        return _leggings;
      }
      set
      {
        __isset.leggings = true;
        this._leggings = value;
      }
    }

    /// <summary>
    /// The item in the player's boots armor slot
    /// </summary>
    public ItemStack Boots
    {
      get
      {
        return _boots;
      }
      set
      {
        __isset.boots = true;
        this._boots = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool helmet;
      public bool chestplate;
      public bool leggings;
      public bool boots;
    }

    public PlayerArmor() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Struct) {
              Helmet = new ItemStack();
              Helmet.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.Struct) {
              Chestplate = new ItemStack();
              Chestplate.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.Struct) {
              Leggings = new ItemStack();
              Leggings.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.Struct) {
              Boots = new ItemStack();
              Boots.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("PlayerArmor");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (Helmet != null && __isset.helmet) {
        field.Name = "helmet";
        field.Type = TType.Struct;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        Helmet.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (Chestplate != null && __isset.chestplate) {
        field.Name = "chestplate";
        field.Type = TType.Struct;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        Chestplate.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (Leggings != null && __isset.leggings) {
        field.Name = "leggings";
        field.Type = TType.Struct;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        Leggings.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (Boots != null && __isset.boots) {
        field.Name = "boots";
        field.Type = TType.Struct;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        Boots.Write(oprot);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("PlayerArmor(");
      sb.Append("Helmet: ");
      sb.Append(Helmet== null ? "<null>" : Helmet.ToString());
      sb.Append(",Chestplate: ");
      sb.Append(Chestplate== null ? "<null>" : Chestplate.ToString());
      sb.Append(",Leggings: ");
      sb.Append(Leggings== null ? "<null>" : Leggings.ToString());
      sb.Append(",Boots: ");
      sb.Append(Boots== null ? "<null>" : Boots.ToString());
      sb.Append(")");
      return sb.ToString();
    }

  }

}
